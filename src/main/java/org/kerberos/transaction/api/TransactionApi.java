/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.11.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.kerberos.transaction.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;
import org.kerberos.transaction.model.TransactionDTO;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import java.util.List;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "accounts", description = "the accounts API")
public interface TransactionApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /accounts/{accountNumber}/transactions : Get transactions for a specific account
     *
     * @param accountNumber (required)
     * @return List of transactions for the given account (status code 200)
     */
    @Operation(
            operationId = "accountNumberTransactionsGet",
            summary = "Get transactions for a specific account",
            responses = {
                    @ApiResponse(responseCode = "200", description = "List of transactions for the given account", content = {
                            @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = TransactionDTO.class)))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/accounts/{accountNumber}/transactions",
            produces = {"application/json"}
    )

    default ResponseEntity<List<TransactionDTO>> accountNumberTransactionsGet(
            @Parameter(name = "accountNumber", description = "", required = true, in = ParameterIn.PATH) @PathVariable("accountNumber") String accountNumber
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"statementPeriod\" : \"statementPeriod\", \"amount\" : { \"currency\" : \"currency\", \"value\" : 0.8008281904610115 }, \"productBankRef\" : \"productBankRef\", \"specificSymbol\" : \"specificSymbol\", \"postingDate\" : \"2000-01-23\", \"transactionTypeCode\" : 6, \"creditDebitIndicator\" : \"CRDT\", \"transactionId\" : \"transactionId\", \"transactionType\" : \"transactionType\", \"ownAccountNumber\" : \"ownAccountNumber\", \"counterPartyAccount\" : { \"bankCode\" : \"bankCode\", \"accountName\" : \"accountName\", \"accountNumber\" : \"accountNumber\" }, \"variableSymbol\" : \"variableSymbol\", \"bookingDate\" : \"2000-01-23\", \"details\" : { \"detail1\" : \"detail1\" }, \"id\" : \"id\", \"statementNumber\" : \"statementNumber\", \"bankref\" : \"bankref\" }, { \"statementPeriod\" : \"statementPeriod\", \"amount\" : { \"currency\" : \"currency\", \"value\" : 0.8008281904610115 }, \"productBankRef\" : \"productBankRef\", \"specificSymbol\" : \"specificSymbol\", \"postingDate\" : \"2000-01-23\", \"transactionTypeCode\" : 6, \"creditDebitIndicator\" : \"CRDT\", \"transactionId\" : \"transactionId\", \"transactionType\" : \"transactionType\", \"ownAccountNumber\" : \"ownAccountNumber\", \"counterPartyAccount\" : { \"bankCode\" : \"bankCode\", \"accountName\" : \"accountName\", \"accountNumber\" : \"accountNumber\" }, \"variableSymbol\" : \"variableSymbol\", \"bookingDate\" : \"2000-01-23\", \"details\" : { \"detail1\" : \"detail1\" }, \"id\" : \"id\", \"statementNumber\" : \"statementNumber\", \"bankref\" : \"bankref\" } ]";
                    ApiUtils.setResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
